{"version":3,"sources":["components/ProgressStep.js","components/DutchProgressBar.js","components/ExpenditureInfo.js","components/NewBillForm.js","components/BillsTable.js","components/BillsInfo.js","components/Settlement.js","components/DutchForm.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["ProgressStep","props","className","title","completed","icon","faCheck","alt","step","DutchProgressBar","steps","Container","id","fluid","ProgressBar","now","currentStep","length","Row","map","i","Col","key","xs","ExpenditureInfo","useState","validated","setValidated","peopleNames","info","setInfo","handleInputChange","event","target","name","value","display","Form","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","onSubmitSucceeded","style","position","Group","controlId","Label","faMoneyCheckAlt","Control","required","type","placeholder","onChange","faUsers","Text","Button","faArrowRight","NewBillForm","billDate","billName","billAmount","billPayer","billInfo","setBillInfo","Card","Body","Title","form","Date","toJSON","reset","md","faCalendarAlt","faStore","faMoneyBillWave","InputGroup","Prepend","faUser","as","faArrowDown","BillsTable","columnNames","actionsShow","pop","Table","responsive","additionalClassName","columnName","_","bills","bill","index","variant","onClick","onBillDeletionClicked","faTrashAlt","defaultProps","BillsInfo","setBills","toastShow","setToastShow","billToDelete","deletedBills","filter","Toast","onClose","show","delay","autohide","Header","src","Settlement","downloading","setDownloading","copiedToastShow","setCopiedToastShow","downloadToastShow","setDownloadToastShow","expenditure","expenditureInfo","sum","flatMap","b","reduce","a","parseInt","amountByPerson","transactions","debtByPerson","sort","amount","left","right","receiver","sender","receiverAmount","senderAmount","push","Math","abs","debt","forEach","Object","keys","transactionToString","join","Subtitle","borderless","size","transaction","faPaperPlane","round","$copyText","document","querySelector","select","setSelectionRange","execCommand","faCopy","toJpeg","getElementById","quality","then","dataUrl","link","createElement","download","split","href","click","faSpinner","spin","faDownload","span","offset","faRedo","readOnly","DutchForm","setExpenditureInfo","setCurrentStep","expenditureInfoDisplayed","displayExpenditureInfo","billsInfoDisplayed","displayBillsInfo","resultDisplayed","displayResult","trim","Footer","rel","faLinkedin","faGithub","App","scrollToForm","scrollIntoView","behavior","faDivide","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4eAmBeA,MAbf,SAAsBC,GACpB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,SAAQ,8BAAOD,EAAME,QACpC,yBAAKD,UAAS,8BAAyBD,EAAMG,UAAY,iBAAkB,KACzEH,EAAMG,UACJ,kBAAC,IAAD,CAAiBC,KAAMC,IAASJ,UAAU,UAAUK,IAAI,YACxD,0BAAML,UAAU,UAAUD,EAAMO,S,MCe3BC,MArBf,SAA0BR,GACxB,IAAMS,EAAQ,CACZ,aACA,QACA,cAGF,OACE,kBAACC,EAAA,EAAD,CAAWC,GAAG,eAAeC,OAAK,GAChC,kBAACC,EAAA,EAAD,CAAaC,IAA+B,KAAzBd,EAAMe,YAAc,IAAYN,EAAMO,OAAS,KAClE,kBAACC,EAAA,EAAD,KACIR,EAAMS,KAAI,SAACX,EAAMY,GAAP,OACV,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAEZ,EAAMe,GAAI,GAAKb,EAAMO,QAC/B,kBAAC,EAAD,CAAcT,KAAMY,EAAI,EAAGjB,MAAOK,EAAMJ,UAAYgB,EAAI,EAAInB,EAAMe,aAAiBf,EAAMe,cAAgBN,EAAMO,gB,wBCsC5GO,MArDf,SAAyBvB,GAAQ,IAAD,EACIwB,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,OAENF,mBAAS,CAC/BtB,MAAO,GACPyB,YAAa,KAJe,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAOxBC,EAAoB,SAACC,GACzBF,EAAQ,2BACHD,GADE,kBAEJG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAmBtC,OAAOlC,EAAMmC,SACX,kBAACzB,EAAA,EAAD,CAAWE,OAAK,EAACX,UAAU,mBACzB,wBAAIA,UAAU,qBAAd,2BAEA,kBAACmC,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAnBtB,SAACP,GACpBA,EAAMQ,iBACNR,EAAMS,kBAEN,IACMf,EADOM,EAAMU,cACIC,gBACvBhB,GAAa,GAETD,GACEzB,EAAM2C,mBACR3C,EAAM2C,kBAAkBf,IASqCgB,MAAO,CAAEC,SAAU,aAChF,kBAACT,EAAA,EAAKU,MAAN,CAAYC,UAAU,SACpB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAM6C,MAAnC,2CACA,kBAACb,EAAA,EAAKc,QAAN,CAAcjB,KAAK,QAAQkB,UAAQ,EAACC,KAAK,OAAOC,YAAY,uBAAuBC,SAAUxB,KAG/F,kBAACM,EAAA,EAAKU,MAAN,CAAYC,UAAU,iBACpB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAMmD,MAAnC,mCACA,kBAACnB,EAAA,EAAKc,QAAN,CAAcC,UAAQ,EAAClB,KAAK,cAAcmB,KAAK,OAAOC,YAAY,uBAAuBC,SAAUxB,IACnG,kBAACM,EAAA,EAAKoB,KAAN,6DAGF,kBAACC,EAAA,EAAD,CAAQxD,UAAU,cAAcmD,KAAK,UAArC,QACO,kBAAC,IAAD,CAAiBhD,KAAMsD,U,sCCiDvBC,MA7Ff,SAAqB3D,GAAQ,IAAD,EACQwB,oBAAS,GADjB,mBACnBC,EADmB,KACRC,EADQ,OAEMF,mBAAS,CACvCoC,SAAU,GACVC,SAAU,GACVC,WAAY,EACZC,UAAW,GACXpD,GAAI,KAPoB,mBAEnBqD,EAFmB,KAETC,EAFS,KAUpBnC,EAAoB,SAACC,GACzBkC,EAAY,2BACPD,GADM,kBAERjC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAyBtC,OACE,kBAACgC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,qBAEA,kBAAChC,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAzBxB,SAACP,GACpBA,EAAMQ,iBACNR,EAAMS,kBAEN,IAAM6B,EAAOtC,EAAMU,cACbhB,EAAY4C,EAAK3B,gBACvBhB,GAAa,GAETD,GAAazB,EAAM2C,oBACrBsB,EAAY,2BACPD,GADM,IAETF,WAAYE,EAASF,WACrBnD,GAAG,GAAD,OAAKqD,EAASH,SAAd,aAA0B,IAAIS,MAAOC,aAEzCvE,EAAM2C,kBAAkBqB,GACxBK,EAAKG,QACL9C,GAAa,MAUT,kBAACU,EAAA,EAAKnB,IAAN,KACE,kBAACG,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAACrC,EAAA,EAAKU,MAAN,CAAYC,UAAU,YACpB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAMsE,MAAnC,cACA,kBAACtC,EAAA,EAAKc,QAAN,CAAcjB,KAAK,WAAYmB,KAAK,OAAOE,SAAUxB,MAIzD,kBAACV,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAACrC,EAAA,EAAKU,MAAN,CAAaC,UAAU,YACrB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAMuE,MAAnC,gBACA,kBAACvC,EAAA,EAAKc,QAAN,CAAejB,KAAK,WAAWmB,KAAK,OAAOE,SAAUxB,OAK3D,kBAACM,EAAA,EAAKnB,IAAN,KACE,kBAACG,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAACrC,EAAA,EAAKU,MAAN,CAAYC,UAAU,cACpB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAMwE,MAAnC,WACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWrB,KAAZ,WAEF,kBAACpB,EAAA,EAAKc,QAAN,CAAcC,UAAQ,EAAClB,KAAK,aAAamB,KAAK,SAASE,SAAUxB,OAKvE,kBAACV,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAACrC,EAAA,EAAKU,MAAN,CAAYC,UAAU,aACpB,kBAACX,EAAA,EAAKY,MAAN,KAAY,kBAAC,IAAD,CAAiB5C,KAAM2E,MAAnC,UAEA,kBAAC3C,EAAA,EAAKc,QAAN,CAAcC,UAAQ,EAAClB,KAAK,YAAY+C,GAAG,SAAS1B,SAAUxB,GAC5D,iCACE9B,EAAM2B,YAAYT,KAAI,SAAAe,GAAI,OAAI,4BAAQZ,IAAKY,GAAOA,UAM5D,kBAACwB,EAAA,EAAD,CAAQxD,UAAU,aAAamD,KAAK,UAApC,OACM,kBAAC,IAAD,CAAiBhD,KAAM6E,W,cCtFvC,SAASC,EAAWlF,GAClB,IAAMmF,EAAc,CAClB,OACA,cACA,SACA,QACA,WAMF,OAJKnF,EAAMoF,aACTD,EAAYE,MAIZ,kBAACC,EAAA,EAAD,CAAOC,WAAYvF,EAAMuF,WAAYtF,UAAS,UAAKD,EAAMwF,oBAAX,qBAC5C,+BACE,4BACE,iCACEL,EAAYjE,KAAI,SAACuE,EAAYC,GAAb,OAChB,wBAAIrE,IAAKoE,GAAaA,QAI5B,+BACEzF,EAAM2F,MAAMzE,KAAI,SAAC0E,EAAMC,GAAP,OAChB,wBAAIxE,IAAKuE,EAAKjF,IACZ,4BAAKkF,EAAQ,GACb,4BAAKD,EAAKhC,UACV,4BAAKgC,EAAK/B,UACV,gCAAM+B,EAAK9B,YACX,4BAAK8B,EAAK7B,WACR/D,EAAMoF,aACN,4BACE,kBAAC3B,EAAA,EAAD,CAAQqC,QAAQ,OAAO7F,UAAU,MAAM8F,QAAS,kBAAM/F,EAAMgG,sBAAsBJ,KAChF,kBAAC,IAAD,CAAiBxF,KAAM6F,cAUvCf,EAAWgB,aAAe,CACxBd,aAAa,EACbG,YAAY,EACZC,oBAAqB,GACrBG,MAAO,IAEMT,Q,MCKAiB,MAnDf,SAAmBnG,GAAQ,IAAD,EACEwB,mBAAS,IADX,mBACjBmE,EADiB,KACVS,EADU,OAEU5E,oBAAS,GAFnB,mBAEjB6E,EAFiB,KAENC,EAFM,KAwBxB,OAAOtG,EAAMmC,SACX,kBAACzB,EAAA,EAAD,CAAWE,OAAK,EAACX,UAAU,mBACzB,wBAAIA,UAAU,qBAAd,oBAEA,kBAAC,EAAD,CAAa0C,kBAbD,SAACiD,GACfQ,EAAS,GAAD,mBAAKT,GAAL,CAAYC,MAYuBjE,YAAa3B,EAAM2B,cAE5D,kBAAC,EAAD,CAAYqE,sBAXG,SAACO,GAClB,IAAMC,EAAeb,EAAMc,QAAO,SAACb,GAAD,OAAUA,EAAKjF,KAAO4F,EAAa5F,MACrEyF,EAASI,IASwCb,MAAOA,EAAOP,aAAa,IAE1E,yBAAKxC,MAAO,CAAEC,SAAU,cACtB,kBAACY,EAAA,EAAD,CAAQxD,UAAU,cAAc8F,QA7BN,WACzBJ,GAA0B,IAAjBA,EAAM3E,QAIpBsF,GAAa,GACTtG,EAAM2C,mBACR3C,EAAM2C,kBAAkBgD,IALxBW,GAAa,KA2BX,QACO,kBAAC,IAAD,CAAiBlG,KAAMsD,QAIhC,yBAAKzD,UAAU,mBACX,kBAACyG,EAAA,EAAD,CAAOC,QAAS,kBAAML,GAAa,IAAQrG,UAAU,cAAc2G,KAAMP,EAAWQ,MAAO,IAAMC,UAAQ,GACvG,kBAACJ,EAAA,EAAMK,OAAP,KACE,yBAAKC,IAAI,2BAA2B/G,UAAU,eAAeK,IAAI,KACjE,4BAAQL,UAAU,WAAlB,mBAEF,kBAACyG,EAAA,EAAMvC,KAAP,oD,cC5CZ,SAAS8C,EAAWjH,GAAQ,IAAD,EACyBwB,oBAAS,GADlC,mBAClB0F,EADkB,KACCC,EADD,OAEyB3F,oBAAS,GAFlC,mBAElB4F,EAFkB,KAECC,EAFD,OAGyB7F,oBAAS,GAHlC,mBAGlB8F,EAHkB,KAGCC,EAHD,KAKzB,IAAKvH,EAAM2F,MACP,OAAO,iDAGX,IAAM6B,EAAiBxH,EAAMyH,gBACvB9B,EAAiB3F,EAAM2F,MACvB+B,EAAiB/B,EAAMgC,SAAQ,SAAAC,GAAC,OAAIA,EAAE9D,cACf+D,QAAO,SAACC,EAAEF,GAAH,OAASG,SAASD,GAAKC,SAASH,MAC9DI,EAAiBN,EAAMF,EAAY7F,YAAYX,OAe/CiH,EAAgB,SAACC,GACrBA,EAAaC,MAAK,SAACL,EAAGF,GAAJ,OAAUE,EAAEM,OAASR,EAAEQ,UAGzC,IAFA,IAAMH,EAAe,GAEZI,EAAO,EAAGC,EAAQJ,EAAalH,OAAS,EAAGqH,EAAOC,GAAQ,CAEjE,IAAMC,EAAWL,EAAaG,GACxBG,EAASN,EAAaI,GAC5B,IAAKC,IAAaC,EAChB,MAEF,IAAMC,EAAiBF,EAASH,OAC1BM,EAAeF,EAAOJ,OAExBK,EAAiBC,EAAe,GAClCT,EAAaU,KAAK,CAChBH,OAAQA,EAAOvG,KACfsG,SAAUA,EAAStG,KACnBmG,OAAQM,IAGVR,EAAaG,GAAMD,QAAUM,EAC7BR,EAAaI,GAAOF,QAAUM,EAE9BJ,GAAS,GAEFG,EAAiBC,EAAe,GACvCT,EAAaU,KAAK,CAChBH,OAAQA,EAAOvG,KACfsG,SAAUA,EAAStG,KACnBmG,OAAQQ,KAAKC,IAAIJ,KAGnBP,EAAaG,GAAMD,OAAS,EAC5BF,EAAaI,GAAOF,QAAUK,EAE9BJ,GAAQ,IAGRJ,EAAaU,KAAK,CAChBH,OAAQA,EAAOvG,KACfsG,SAAUA,EAAStG,KACnBmG,OAAQM,IAGVR,EAAaG,GAAMD,OAAS,EAC5BF,EAAaI,GAAOF,OAAS,EAE7BC,GAAQ,EACRC,GAAS,GAIb,OAAOL,EArDa,CAbA,WACpB,IAAIa,EAAO,GAMX,OALAtB,EAAY7F,YAAYoH,SAAQ,SAAA9G,GAAI,OAClC6G,EAAK7G,GAAQ+F,KACfrC,EAAMoD,SAAQ,SAAAnD,GAAI,OAChBkD,EAAKlD,EAAK7B,WAAa+E,EAAKlD,EAAK7B,WAAa6B,EAAK9B,cAE9CkF,OAAOC,KAAKH,GAAM5H,KAAI,SAAAe,GAAI,MAAK,CACpCA,KAAMA,EACNmG,OAAQU,EAAK7G,OATK,IAqEhBiH,EAAsBjB,EAAaN,SAAQ,SAAAG,GAAC,gBAAOA,EAAEU,OAAT,aAAoBV,EAAES,SAAtB,cAAoCT,EAAEM,WAC/Ce,KAAK,MA0B9C,OAAOnJ,EAAMmC,SACX,kBAACzB,EAAA,EAAD,CAAWE,OAAK,EAACX,UAAU,mBACzB,yBAAKA,UAAU,oBACb,yBAAKU,GAAG,UAEN,wBAAIV,UAAU,qBAAd,cAEA,kBAACiE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,KAAaoD,EAAYtH,OACzB,kBAACgE,EAAA,EAAKkF,SAAN,cAAsB5B,EAAY7F,YAAYwH,KAAK,OAEnD,kBAACjF,EAAA,EAAKV,KAAN,0BACoB,+BAAKkE,GAAQ,6BADjC,wBAEuB,+BAAKM,MAIhC,6BAEA,yCACA,kBAAC,EAAD,CAAYrC,MAAOA,EAAOP,aAAa,EAAOG,YAAY,IAE1D,kBAACrB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,4BAEA,kBAACkB,EAAA,EAAD,CAAO+D,YAAU,EAAC9D,YAAU,EAAC+D,KAAK,MAChC,+BACCrB,EAAa/G,KAAI,SAACqI,EAAa1D,GAAd,OAChB,wBAAIxE,IAAG,0BAAqBwE,IAC1B,4BAAI,kBAAC,IAAD,CAAiBzF,KAAMoJ,OAC3B,4BAAKD,EAAYf,QACjB,4BAAI,kBAAC,IAAD,CAAiBpI,KAAMsD,OAC3B,4BAAK6F,EAAYhB,UACjB,iCACA,gCAAMK,KAAKa,MAA2B,GAArBF,EAAYnB,QAAe,cAU1D,kBAACnH,EAAA,EAAD,CAAKhB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAAChB,EAAA,EAAD,CAAQxD,UAAU,gBAAgB8F,QAxE1C,WACE,IAAM2D,EAAYC,SAASC,cAAc,6BACzCF,EAAUG,SACVH,EAAUI,kBAAkB,EAAG,OAC/BH,SAASI,YAAY,QAErB1C,GAAmB,KAmEX,kBAAC,IAAD,CAAiBjH,KAAM4J,MADzB,0BAIF,kBAAC5I,EAAA,EAAD,CAAKE,GAAI,GAAImD,GAAI,GACf,kBAAChB,EAAA,EAAD,CAAQxD,UAAU,gBAAgB8F,QApE1C,WACEoB,GAAe,GAEf8C,iBAAON,SAASO,eAAe,UAAW,CAAEC,QAAS,MAClDC,MAAK,SAAUC,GACd,IAAIC,EAAOX,SAASY,cAAc,KAClCD,EAAKE,SAAL,UAAmBhD,EAAYtH,MAAMuK,MAAM,KAAKtB,KAAK,KAArD,SACAmB,EAAKI,KAAOL,EACZC,EAAKK,WAGTxD,GAAe,GACfI,GAAqB,KAyDZL,EACD,kBAAC,IAAD,CAAiB9G,KAAMwK,IAAWC,MAAI,IACtC,kBAAC,IAAD,CAAiBzK,KAAM0K,MAHzB,OAKG5D,EAAc,cAAgB,cAKrC,kBAACjG,EAAA,EAAD,CAAKhB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAKE,GAAI,CAAEyJ,KAAM,EAAGC,OAAQ,IAC1B,uBAAG/K,UAAU,sBAAsByK,KAAK,KAAI,kBAAC,IAAD,CAAiBtK,KAAM6K,MAAnE,6BAIJ,2BAAOC,UAAQ,EAACjL,UAAU,SAASU,GAAG,2BAA2BuB,MAAOgH,IAExE,yBAAKjJ,UAAU,mBACb,kBAACyG,EAAA,EAAD,CAAOC,QAAS,WAAOU,GAAmB,IAAST,KAAMQ,EAAiBnH,UAAU,gBAAe4G,MAAO,IAAMC,UAAQ,GACtH,kBAACJ,EAAA,EAAMK,OAAP,KACE,yBAAKC,IAAI,2BAA2B/G,UAAU,eAAeK,IAAI,KACjE,4BAAQL,UAAU,WAAlB,yBAEF,kBAACyG,EAAA,EAAMvC,KAAP,KAAc+E,IAGhB,kBAACxC,EAAA,EAAD,CAAOC,QAAS,WAAOY,GAAqB,IAASX,KAAMU,EAAmBrH,UAAU,gBAAgB4G,MAAO,IAAMC,UAAQ,GAC3H,kBAACJ,EAAA,EAAMK,OAAP,KACE,yBAAKC,IAAI,2BAA2B/G,UAAU,eAAeK,IAAI,KACjE,4BAAQL,UAAU,WAAlB,wBAEF,kBAACyG,EAAA,EAAMvC,KAAP,0CAOK8C,QACfA,EAAWf,aAAe,CACxBuB,gBAAiB,CAACvH,MAAO,GAAIyB,YAAa,CAAC,KAC3CgE,MAAO,CAAC,CAAC/B,SAAU,GAAIC,SAAU,GAAIC,WAAY,EAAGC,UAAW,MCxJlDoH,MAvDf,WAAsB,IAAD,EAE2B3J,mBAAS,CACrDtB,MAAO,GACPyB,YAAa,CAAC,MAJG,mBAEZ8F,EAFY,KAEK2D,EAFL,OAOO5J,mBAAS,CACjC,CAACb,GAAI,KAAMmD,WAAY,EAAGC,UAAW,GAAIF,SAAU,GAAID,SAAU,MARhD,mBAOZ+B,EAPY,KAOLS,EAPK,OAWmB5E,mBAAS,GAX5B,mBAWZT,EAXY,KAWCsK,EAXD,OAawC7J,oBAAS,GAbjD,mBAaZ8J,EAbY,KAacC,EAbd,OAe4B/J,oBAAS,GAfrC,mBAeZgK,EAfY,KAeQC,EAfR,OAiBsBjK,oBAAS,GAjB/B,mBAiBZkK,EAjBY,KAiBKC,EAjBL,KAwCnB,OACE,yBAAKhL,GAAG,cAEN,kBAAC,EAAD,CAAkBI,YAAaA,IAE/B,kBAAC,EAAD,CAAiBoB,QAASmJ,EAA0B3I,kBA1B5B,SAACf,GAC3BwJ,EAAmB,CACjBlL,MAAO0B,EAAK1B,MACZyB,YAAaC,EAAKD,YAAY8I,MAAM,KAAKvJ,KAAI,SAAAe,GAAI,OAAIA,EAAK2J,YAG5DP,EAAe,GACfE,GAAuB,GACvBE,GAAiB,MAoBf,kBAAC,EAAD,CAAWtJ,QAASqJ,EAAoB7I,kBAjBhB,SAACgD,GAC3BS,EAAST,GAET0F,EAAe,GACfI,GAAiB,GACjBE,GAAc,GAEdN,EAAe,IAUmE1J,YAAa8F,EAAgB9F,cAE7G,kBAAC,EAAD,CAAYQ,QAASuJ,EAAiBjE,gBAAiBA,EAAiB9B,MAAOA,M,cCtCtEkG,MAdf,WACE,OACE,0EAEA,uBAAG7J,OAAO,SAAS8J,IAAI,sBAAsBpB,KAAK,wCAChD,kBAAC,IAAD,CAAiBtK,KAAM2L,OAHzB,WAKA,uBAAG/J,OAAO,SAAS8J,IAAI,sBAAsBpB,KAAK,kCAChD,kBAAC,IAAD,CAAiBtK,KAAM4L,SCkDdC,MAtDf,WAEE,SAASC,IACPvC,SAASO,eAAe,cAAciC,eAAe,CACnDC,SAAU,WAmCd,OACE,yBAAKnM,UAAU,OA/Bf,yBAAKU,GAAG,gBACN,4BAAQV,UAAU,UAChB,4BACE,kBAAC,IAAD,CAAiBG,KAAMiM,IAAUpM,UAAU,WAAWK,IAAI,OAAOuK,MAAI,EAACvB,KAAK,OAD7E,eAIE,4DAGF,uBAAGrJ,UAAU,OAAb,0GACuG,6BACvG,0BAAMA,UAAU,aAAhB,aAFA,qEAE8G,6BAAK,6BACnH,uBAAGA,UAAU,SAAb,mTAEE,6BAFF,WAKA,6BACA,6BATA,0CAUuC,6BAVvC,2BAWwB,0BAAMA,UAAU,aAAhB,wBAAuD,+BAIjF,6BACE,kBAACwD,EAAA,EAAD,CAAQxD,UAAU,eAAeqJ,KAAK,KAAKvD,QAASmG,GAApD,kBAUF,kBAAC,EAAD,MAIA,kBAAC,EAAD,QC9CcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlD,SAASO,eAAe,SDyHpB,kBAAmB4C,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.282af81c.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/ProgressStep.scss'\n\nfunction ProgressStep(props) {\n  return (\n    <div className=\"progress-step\">\n      <div className=\"title\"><span>{props.title}</span></div>\n      <div className={`step rounded-circle ${props.completed ? 'completed-step': ''}`}>\n      { props.completed ?\n          <FontAwesomeIcon icon={faCheck} className=\"checked\" alt=\"checked\"/> :\n          <span className=\"number\">{props.step}</span>\n      }\n      </div>\n    </div>\n  );\n}\nexport default ProgressStep;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport ProgressStep from 'components/ProgressStep'\nimport 'components/DutchProgressBar.scss'\n\nfunction DutchProgressBar(props) {\n  const steps = [\n    \"Basic info\",\n    \"Bills\",\n    \"Get result\"\n  ]\n\n  return (\n    <Container id=\"progress-bar\" fluid>\n      <ProgressBar now={(props.currentStep - 1) * 100 / (steps.length - 1)} />\n      <Row>\n        { steps.map((step, i) => (\n          <Col key={i+step} xs={12 / steps.length}>\n            <ProgressStep step={i + 1} title={step} completed={(i + 1 < props.currentStep) || (props.currentStep === steps.length)} />\n          </Col>\n        )) }\n      </Row>\n    </Container>\n  )\n}\n\nexport default DutchProgressBar\n","import React, { useState } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUsers, faMoneyCheckAlt, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction ExpenditureInfo(props) {\n  const [validated, setValidated] = useState(false);\n  const [info, setInfo] = useState({\n    title: '',\n    peopleNames: '',\n  });\n\n  const handleInputChange = (event) => {\n    setInfo({\n      ...info,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const form = event.currentTarget\n    const validated = form.checkValidity()\n    setValidated(true)\n\n    if (validated) {\n      if (props.onSubmitSucceeded) {\n        props.onSubmitSucceeded(info)\n      }\n    }\n  }\n\n  return props.display && (\n    <Container fluid className=\"steps-container\">\n      <h2 className=\"step-title-header\">Expenditure information</h2>\n\n      <Form noValidate validated={validated} onSubmit={handleSubmit} style={{ position: 'relative' }}>\n        <Form.Group controlId=\"title\">\n          <Form.Label><FontAwesomeIcon icon={faMoneyCheckAlt} /> What is bills about you want to split?</Form.Label>\n          <Form.Control name=\"title\" required type=\"text\" placeholder=\"2020 Vancouver trip!\" onChange={handleInputChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"group-members\">\n          <Form.Label><FontAwesomeIcon icon={faUsers} /> Who do you want to split with?</Form.Label>\n          <Form.Control required name=\"peopleNames\" type=\"text\" placeholder=\"Aree, Tomas, Jessica\" onChange={handleInputChange} />\n          <Form.Text>Enter the names of people separating with comma (,)</Form.Text>\n        </Form.Group>\n\n        <Button className=\"next-button\" type=\"submit\">\n          Next <FontAwesomeIcon icon={faArrowRight}/>\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default ExpenditureInfo;\n","import React, { useState } from 'react'\nimport { Form, Button, Col, Card, InputGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt, faStore, faUser, faArrowDown, faMoneyBillWave } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/NewBillForm.scss'\n\nfunction NewBillForm(props) {\n  const [validated, setValidated] = useState(false);\n  const [billInfo, setBillInfo] = useState({\n    billDate: '',\n    billName: '',\n    billAmount: 0,\n    billPayer: '',\n    id: '',\n  });\n\n  const handleInputChange = (event) => {\n    setBillInfo({\n      ...billInfo,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const form = event.currentTarget\n    const validated = form.checkValidity()\n    setValidated(true)\n\n    if (validated && props.onSubmitSucceeded) {\n      setBillInfo({\n        ...billInfo,\n        billAmount: billInfo.billAmount,\n        id: `${billInfo.billName}_${new Date().toJSON()}`\n      })\n      props.onSubmitSucceeded(billInfo)\n      form.reset()\n      setValidated(false)\n    }\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Add new bill</Card.Title>\n\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Row>\n            <Col xs={12} md={5}>\n              <Form.Group controlId=\"billDate\">\n                <Form.Label><FontAwesomeIcon icon={faCalendarAlt} /> Bill date</Form.Label>\n                <Form.Control name=\"billDate\"  type=\"date\" onChange={handleInputChange} />\n              </Form.Group>\n            </Col>\n\n            <Col xs={12} md={7}>\n              <Form.Group  controlId=\"billName\">\n                <Form.Label><FontAwesomeIcon icon={faStore} /> Description</Form.Label>\n                <Form.Control  name=\"billName\" type=\"text\" onChange={handleInputChange} />\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col xs={12} md={5}>\n              <Form.Group controlId=\"billAmount\">\n                <Form.Label><FontAwesomeIcon icon={faMoneyBillWave} /> Amount</Form.Label>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>$</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control required name=\"billAmount\" type=\"number\" onChange={handleInputChange} />\n                </InputGroup>\n              </Form.Group>\n            </Col>\n\n            <Col xs={12} md={7}>\n              <Form.Group controlId=\"billPayer\">\n                <Form.Label><FontAwesomeIcon icon={faUser} /> Payer</Form.Label>\n                {/* todo: change to radio button */}\n                <Form.Control required name=\"billPayer\" as=\"select\" onChange={handleInputChange}>\n                  <option></option>\n                  { props.peopleNames.map(name => <option key={name}>{name}</option>) }\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Button className=\"add-button\" type=\"submit\">\n            Add <FontAwesomeIcon icon={faArrowDown}/>\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  )\n}\nexport default NewBillForm;\n","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/BillsTable.scss'\n\nfunction BillsTable(props) {\n  const columnNames = [\n    'Date',\n    'Description',\n    'Amount',\n    'Payer',\n    'Actions'\n  ]\n  if (!props.actionsShow) {\n    columnNames.pop()\n  }\n\n  return (\n    <Table responsive={props.responsive} className={`${props.additionalClassName} bill-table mt-4`}>\n      <thead>\n        <tr>\n          <th>#</th>\n          { columnNames.map((columnName, _) => (\n            <th key={columnName}>{columnName}</th>\n          )) }\n        </tr>\n      </thead>\n      <tbody>\n      { props.bills.map((bill, index) => (\n        <tr key={bill.id}>\n          <td>{index + 1}</td>\n          <td>{bill.billDate}</td>\n          <td>{bill.billName}</td>\n          <td>${bill.billAmount}</td>\n          <td>{bill.billPayer}</td>\n          { props.actionsShow &&\n            <td>\n              <Button variant=\"link\" className=\"p-0\" onClick={() => props.onBillDeletionClicked(bill)}>\n                <FontAwesomeIcon icon={faTrashAlt}/>\n              </Button>\n            </td>\n          }\n        </tr>\n      )) }\n      </tbody>\n    </Table>\n  )\n}\nBillsTable.defaultProps = {\n  actionsShow: true,\n  responsive: true,\n  additionalClassName: '',\n  bills: [],\n}\nexport default BillsTable;\n","import React, { useState } from 'react'\nimport { Container, Button, Toast } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nimport NewBillForm from 'components/NewBillForm'\nimport BillsTable from 'components/BillsTable'\n\nimport 'components/DutchToast.scss'\n\nfunction BillsInfo(props) {\n  const [bills, setBills] = useState([])\n  const [toastShow, setToastShow] = useState(false)\n\n  const handleNextButtonClicked = () => {\n    if (!bills || bills.length === 0) {\n      setToastShow(true)\n      return\n    }\n    setToastShow(false)\n    if (props.onSubmitSucceeded) {\n      props.onSubmitSucceeded(bills);\n    }\n  }\n\n  const addBill = (bill) => {\n    setBills([...bills, bill])\n  }\n\n  const deleteBill = (billToDelete) => {\n    const deletedBills = bills.filter((bill) => bill.id !== billToDelete.id)\n    setBills(deletedBills)\n  }\n\n  return props.display && (\n    <Container fluid className=\"steps-container\">\n      <h2 className=\"step-title-header\">Bill information</h2>\n\n      <NewBillForm onSubmitSucceeded={addBill} peopleNames={props.peopleNames} />\n\n      <BillsTable onBillDeletionClicked={deleteBill} bills={bills} actionsShow={true} />\n\n      <div style={{ position: 'relative '}}>\n        <Button className=\"next-button\" onClick={handleNextButtonClicked}>\n          Next <FontAwesomeIcon icon={faArrowRight}/>\n        </Button>\n      </div>\n\n      <div className=\"toast-container\">\n          <Toast onClose={() => setToastShow(false)} className='error-toast' show={toastShow} delay={3000} autohide>\n            <Toast.Header>\n              <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\n              <strong className=\"mr-auto\">Error occurred</strong>\n            </Toast.Header>\n            <Toast.Body>There should be at least 1 bill entered</Toast.Body>\n          </Toast>\n      </div>\n    </Container>\n  )\n}\n\nexport default BillsInfo;\n","import React, { useState }from 'react'\nimport { Container, Button, Card, Row, Col, Table, Toast } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faPaperPlane, faCopy, faDownload, faSpinner, faRedo } from '@fortawesome/free-solid-svg-icons'\nimport { toJpeg } from 'html-to-image'\n\nimport BillsTable from 'components/BillsTable'\nimport 'components/Settlement.scss'\nimport 'components/DutchToast.scss'\n\nfunction Settlement(props) {\n  const [downloading,       setDownloading]       = useState(false)\n  const [copiedToastShow,   setCopiedToastShow]   = useState(false)\n  const [downloadToastShow, setDownloadToastShow] = useState(false)\n\n  if (!props.bills) {\n      return <div>No bills entered</div>\n  }\n\n  const expenditure    = props.expenditureInfo\n  const bills          = props.bills\n  const sum            = bills.flatMap(b => b.billAmount)\n                              .reduce((a,b) => parseInt(a) + parseInt(b))\n  const amountByPerson = sum / expenditure.peopleNames.length\n\n  const debtByPerson = (() => {\n    var debt = {}\n    expenditure.peopleNames.forEach(name =>\n      debt[name] = amountByPerson)\n    bills.forEach(bill =>\n      debt[bill.billPayer] = debt[bill.billPayer] - bill.billAmount)\n\n    return Object.keys(debt).map(name => ({\n      name: name,\n      amount: debt[name]\n    }))\n  })()\n\n  const transactions = ((debtByPerson) => {\n    debtByPerson.sort((a, b) => a.amount - b.amount)\n    const transactions = []\n\n    for (var left = 0, right = debtByPerson.length - 1; left < right;) {\n\n      const receiver = debtByPerson[left]\n      const sender = debtByPerson[right]\n      if (!receiver || !sender) {\n        break;\n      }\n      const receiverAmount = receiver.amount\n      const senderAmount = sender.amount\n\n      if (receiverAmount + senderAmount < 0) {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: senderAmount\n        })\n\n        debtByPerson[left].amount += senderAmount\n        debtByPerson[right].amount -= senderAmount\n\n        right -= 1\n      }\n      else if (receiverAmount + senderAmount > 0) {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: Math.abs(receiverAmount)\n        })\n\n        debtByPerson[left].amount = 0\n        debtByPerson[right].amount += receiverAmount\n\n        left += 1\n      }\n      else {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: senderAmount\n        })\n\n        debtByPerson[left].amount = 0\n        debtByPerson[right].amount = 0\n\n        left += 1\n        right -= 1\n      }\n    }\n\n    return transactions\n  })(debtByPerson)\n\n  const transactionToString = transactions.flatMap(a => `${a.sender}->${a.receiver} : ${a.amount}`)\n                                          .join(\", \")\n\n  function copyToClipboard() {\n    const $copyText = document.querySelector(\"#transaction-plain-string\")\n    $copyText.select()\n    $copyText.setSelectionRange(0, 99999) /*For mobile devices*/\n    document.execCommand(\"copy\")\n\n    setCopiedToastShow(true)\n  }\n\n  function download() {\n    setDownloading(true)\n\n    toJpeg(document.getElementById('report'), { quality: 0.95 })\n      .then(function (dataUrl) {\n        var link = document.createElement('a')\n        link.download = `${expenditure.title.split(' ').join('_')}.jpeg`;\n        link.href = dataUrl\n        link.click()\n      });\n\n    setDownloading(false)\n    setDownloadToastShow(true)\n  }\n\n  return props.display && (\n    <Container fluid className=\"steps-container\">\n      <div className=\"report-container\">\n        <div id=\"report\">\n\n          <h2 className=\"step-title-header\">Settlement</h2>\n\n          <Card>\n            <Card.Body>\n              <Card.Title>{expenditure.title}</Card.Title>\n              <Card.Subtitle> with {expenditure.peopleNames.join(', ')}</Card.Subtitle>\n\n              <Card.Text>\n                Sum of all bills: <b>${sum}</b><br/>\n                Cost of each person: <b>${amountByPerson}</b>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <br/>\n\n          <h3>Bill list</h3>\n          <BillsTable bills={bills} actionsShow={false} responsive={false} />\n\n          <Card>\n            <Card.Body>\n              <Card.Title>Minimum transaction</Card.Title>\n\n              <Table borderless responsive size=\"sm\">\n                <tbody>\n                {transactions.map((transaction, index) =>\n                  <tr key={`transaction-row-${index}`}>\n                    <td><FontAwesomeIcon icon={faPaperPlane} /></td>\n                    <td>{transaction.sender}</td>\n                    <td><FontAwesomeIcon icon={faArrowRight} /></td>\n                    <td>{transaction.receiver}</td>\n                    <td>:</td>\n                    <td>${Math.round(transaction.amount * 10) / 10}</td>\n                  </tr>\n                )}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n\n      <Row className=\"mt-3\">\n        <Col xs={12} md={6}>\n          <Button className=\"action-button\" onClick={copyToClipboard}>\n            <FontAwesomeIcon icon={faCopy}/>&nbsp;Copy to clipboard\n          </Button>\n        </Col>\n        <Col xs={12} md={6}>\n          <Button className=\"action-button\" onClick={download}>\n           { downloading ?\n            <FontAwesomeIcon icon={faSpinner} spin /> :\n            <FontAwesomeIcon icon={faDownload}/> }\n            &nbsp;\n           { downloading ? 'Downloading' : 'Download' }\n          </Button>\n        </Col>\n      </Row>\n\n      <Row className=\"mt-5\">\n        <Col xs={{ span: 8, offset: 2 }}>\n          <a className=\"text-center d-block\" href=\"/\"><FontAwesomeIcon icon={faRedo}/>&nbsp;Begin new dutch pay</a>\n        </Col>\n      </Row>\n\n      <input readOnly className=\"d-none\" id=\"transaction-plain-string\" value={transactionToString} />\n\n      <div className=\"toast-container\">\n        <Toast onClose={() => {setCopiedToastShow(false)}} show={copiedToastShow} className='success-toast'delay={3000} autohide>\n          <Toast.Header>\n            <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\n            <strong className=\"mr-auto\">Copied to clipboard!</strong>\n          </Toast.Header>\n          <Toast.Body>{ transactionToString }</Toast.Body>\n        </Toast>\n\n        <Toast onClose={() => {setDownloadToastShow(false)}} show={downloadToastShow} className='success-toast' delay={3000} autohide>\n          <Toast.Header>\n            <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\n            <strong className=\"mr-auto\">Download completed!</strong>\n          </Toast.Header>\n          <Toast.Body>Check the download folder.. :)</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  )\n}\n\nexport default Settlement;\nSettlement.defaultProps = {\n  expenditureInfo: {title: '', peopleNames: ['']},\n  bills: [{billDate: '', billName: '', billAmount: 0, billPayer: ''}]\n}\n// rename to settlement\n","import React, { useState } from 'react'\n\nimport 'components/DutchForm.scss'\nimport DutchProgressBar from 'components/DutchProgressBar'\nimport ExpenditureInfo from 'components/ExpenditureInfo'\nimport BillsInfo from 'components/BillsInfo'\nimport Settlement from 'components/Settlement'\n\n\nfunction DutchForm() {\n\n  const [expenditureInfo, setExpenditureInfo] = useState({\n    title: '',\n    peopleNames: ['']\n  })\n\n  const [bills, setBills] = useState([\n    {id: null, billAmount: 0, billPayer: '', billName: '', billDate: ''}\n  ])\n\n  const [currentStep, setCurrentStep] = useState(1)\n  /* step 1 */\n  const [expenditureInfoDisplayed, displayExpenditureInfo] = useState(true)\n  /* step 2 */\n  const [billsInfoDisplayed, displayBillsInfo] = useState(false)\n  /* step 3 */\n  const [resultDisplayed, displayResult] = useState(false)\n\n  const afterStep1Submitted = (info) => {\n    setExpenditureInfo({\n      title: info.title,\n      peopleNames: info.peopleNames.split(\",\").map(name => name.trim())\n    })\n\n    setCurrentStep(2)\n    displayExpenditureInfo(false)\n    displayBillsInfo(true)\n  }\n\n  const afterStep2Submitted = (bills) => {\n    setBills(bills)\n\n    setCurrentStep(3)\n    displayBillsInfo(false)\n    displayResult(true)\n\n    setCurrentStep(3)\n  }\n\n  return (\n    <div id=\"dutch-form\">\n\n      <DutchProgressBar currentStep={currentStep} />\n\n      <ExpenditureInfo display={expenditureInfoDisplayed} onSubmitSucceeded={afterStep1Submitted} />\n\n      <BillsInfo display={billsInfoDisplayed} onSubmitSucceeded={afterStep2Submitted} peopleNames={expenditureInfo.peopleNames} />\n\n      <Settlement display={resultDisplayed} expenditureInfo={expenditureInfo} bills={bills} />\n\n    </div>\n  )\n}\n\nexport default DutchForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nimport 'components/Footer.scss'\n\nfunction Footer() {\n  return (\n    <footer>\n    Designed and developed by Aree Oh, &nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/aree-oh/\">\n      <FontAwesomeIcon icon={faLinkedin} />\n    </a>&nbsp;&nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/aria-grande\">\n      <FontAwesomeIcon icon={faGithub} />\n    </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDivide } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/App.scss'\nimport DutchForm from 'components/DutchForm'\nimport Footer from 'components/Footer'\n\n\nfunction App() {\n\n  function scrollToForm() {\n    document.getElementById(\"dutch-form\").scrollIntoView({\n      behavior: 'smooth'\n    })\n  }\n\n  const renderIntroduction = () => (\n    <div id=\"introduction\">\n      <header className=\"header\">\n        <h1>\n          <FontAwesomeIcon icon={faDivide} className=\"App-logo\" alt=\"logo\" spin size=\"lg\" />\n          &nbsp;&nbsp;&nbsp;\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <span>Split bills with friends!</span>\n        </h1>\n\n        <p className=\"p-3\">\n        It's not a simple calculator that lets you know how much you have to pay for a bill paid by one person.<br/>\n        <span className=\"highlight\">Dutch pay</span> will calculate and split for every bills paid by multiple people.<br/><br/>\n        <i className=\"quote\">\n          I went to a trip with my friends and each of us spent different amount of money for buying food, drinks and etc. After the trip, I was struggled with how to spilt all the bills. At that moment, I used this and it was super easy. What I did was just entering all the bills and DutchPay solved the problem!\n          <br/>\n          -- Aree\n        </i>\n        <br/>\n        <br/>\n        Enter every bills, we will let you know<br/>\n        how to split bills with <span className=\"highlight\">minimum transaction!</span><br/>\n        </p>\n      </header>\n\n      <div>\n        <Button className=\"start-button\" size=\"lg\" onClick={scrollToForm}>Get started!</Button>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n\n      { renderIntroduction() }\n\n      <DutchForm />\n\n      { /* Share with friends button */ }\n\n      <Footer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}