{"version":3,"sources":["redux/rootReducer.js","redux/store.js","redux/actions.js","Title.js","Group.js","Expenditure.js","App.js","index.js"],"names":["defaultExpenditures","id","date","store","desc","amount","payer","initialState","currentPage","title","people","expenditures","totalAmount","getTotalAmount","transfers","getTransfers","exps","payToPerson","length","toPayPerPerson","map","name","forEach","exp","filter","pp","sort","a","b","payee","push","sender","receiver","sum","shift","pop","reduce","acc","expenditure","rootReducer","state","action","newExps","type","Object","assign","s","concat","pageNum","createStore","setTitle","setPeople","deleteExpenditure","saveExpenditure","ConnectedTitle","props","getState","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","history","className","Header","as","textAlign","placeholder","onChange","onClick","React","Component","Title","connect","dispatch","ConnectedGroup","names","handleNameChanged","split","trim","Array","from","Set","defaultValue","join","idx","key","Group","emptyEditableExpenditure","undefined","ConnectedExpenditure","editableExpenditure","showSucceedMessage","showErrorMessage","transferList","exportToFile","handleDismiss","removeErrorMessage","editExpenditure","Date","toISOString","substr","window","scrollTo","document","querySelector","parseInt","innerText","form","reset","now","nowString","getFullYear","getMonth","getDate","htmlToImage","toJpeg","getElementById","backgroundColor","then","dataUrl","download","peopleNameOptions","text","ref","el","onSubmit","Message","negative","style","display","info","onDismiss","getEditableExpenditureISODate","Input","labelPosition","Label","basic","Select","search","options","position","bottom","right","color","Table","celled","selectable","sortable","Row","header","HeaderCell","Body","values","data","key2","Cell","Math","round","Divider","horizontal","Icon","size","corner","transfer","Expenditure","App","Container","Image","src","centered","exact","to","path","component","ReactDOM","render","padding"],"mappings":"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","file":"static/js/main.7a40d8d1.chunk.js","sourcesContent":["let defaultExpenditures = [\n  { id: 1, date: \"2019-08-07\", store: \"Farm to tbale\", desc: \"bought cherries and salad for our lunch\", amount: 20, payer: \"Aree\" },\n  { id: 2, date: \"2019-08-07\", store: \"Farm to tbale\", desc: \"bought cherries and salad for our lunch\", amount: 20, payer: \"Aree\" },\n  { id: 3, date: \"2019-08-07\", store: \"Farm to tbale\", desc: \"bought cherries and salad for our lunch\", amount: 20, payer: \"Miika\" },\n  { id: 4, date: \"2019-08-07\", store: \"Farm to tbale\", desc: \"bought cherries and salad for our lunch\", amount: 20, payer: \"Aree\" },\n]\n\nconst initialState = {\n  currentPage: 1,\n  title: '',\n  people: ['Aree', 'Miika', 'Kevin'],\n  /*\n   * { id: 1, payerId: 1, amount: 0, }\n   */\n  expenditures: defaultExpenditures,\n  totalAmount: getTotalAmount(defaultExpenditures),\n  /*\n   * { sender: 'Aree', receiver: 'John', amount: 20 }\n   */\n  transfers: []\n};\n\n\nfunction getTransfers(exps, people) {\n  // 1. get summation of each person\n  const payToPerson = (getTotalAmount(exps) / people.length);\n  let toPayPerPerson = people.map(name => ({name: name, amount: payToPerson}));\n  exps.forEach(exp => {\n    toPayPerPerson.filter(pp => pp.name === exp.payer)[0].amount -= exp.amount;\n  });\n\n  toPayPerPerson.sort((a,b) => a.amount - b.amount);\n\n  let transfers = [];\n  while(toPayPerPerson.length > 1) {\n    var payee = toPayPerPerson[0];\n    var payer = toPayPerPerson[toPayPerPerson.length - 1];\n    transfers.push({ sender: payer.name, receiver: payee.name, amount: payer.amount});\n\n    var sum = payee.amount + payer.amount;\n    if(sum === 0) {\n      toPayPerPerson.shift();\n      toPayPerPerson.pop();\n    }\n    else if(sum > 0) {\n      payer.amount += payee.amount;\n      toPayPerPerson.shift();\n    }\n    else {\n      payee.amount += payer.amount;\n      toPayPerPerson.pop();\n    }\n  }\n  return transfers;\n}\n\nfunction getTotalAmount(exps) {\n  return exps.reduce((acc, expenditure) => acc + expenditure.amount, 0);\n}\n\nfunction rootReducer(state = initialState, action) {\n  var newExps = state.expenditures;\n  switch (action.type) {\n    case 'SET_TITLE':\n      state.title = action.title;\n      return state;\n\n    case 'SET_PEOPLE':\n      return Object.assign({}, state, {\n        people: action.people\n      });\n\n    case 'DELETE_EXPENDITURE':\n      newExps = newExps.filter(s => s.id !== action.id);\n      return Object.assign({}, state, {\n        expenditures: newExps,\n        totalAmount: getTotalAmount(newExps),\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    case 'SAVE_EXPENDITURE':\n      newExps = newExps.filter(s => s.id !== action.id).concat(action.expenditure);\n      return Object.assign({}, state, {\n        expenditures: newExps,\n        totalAmount: getTotalAmount(newExps),\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    case 'MOVE_STEP':\n      return Object.assign({}, state, {\n        currentPage: action.pageNum\n      });\n\n    case 'GET_TRANSFERS':\n      return Object.assign({}, state, {\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    default:\n      return state\n  }\n};\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\nexport default store;\n","export const setTitle = title => ({\n  type: 'SET_TITLE',\n  title: title\n});\n\nexport const setPeople = people => ({\n  type: 'SET_PEOPLE',\n  people: people\n});\n\nexport const deleteExpenditure = expenditure => ({\n  type: 'DELETE_EXPENDITURE',\n  id: expenditure.id\n});\n\nexport const saveExpenditure = expenditure => ({\n  type: 'SAVE_EXPENDITURE',\n  id: expenditure.id,\n  expenditure: expenditure\n});\n\nexport const getTransfers = () => ({\n  type: 'GET_TRANSFERS'\n})\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { setTitle } from \"./redux/actions\";\nimport store from './redux/store';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTitle: title => dispatch(setTitle(title)),\n  };\n}\n\nclass ConnectedTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: store.getState().title\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.setTitle(this.state.title);\n    this.props.history.push('/group');\n  }\n\n  render() {\n    return (\n      <div className=\"ui center\">\n        <div className=\"ui hidden divider\"></div>\n        <Header as=\"h2\" textAlign=\"center\">What is your expenditures about?</Header>\n        <div className=\"ui one column input big stackable center aligned page grid\">\n          <div className=\"column twelve wide\">\n            <div className=\"ui input fluid\">\n              <input type=\"text\" placeholder=\"Enter the title...\"\n                     value={this.state.title} onChange={this.handleChange} />\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div className=\"ui hidden divider\"></div>\n            <button className=\"ui inverted green big button\" onClick={ this.handleSubmit }><i className=\"save icon\"></i>&nbsp;Save</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Title = connect(null, mapDispatchToProps)(ConnectedTitle);\n\nexport default Title;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { setPeople } from \"./redux/actions\";\nimport store from './redux/store';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setPeople: people => dispatch(setPeople(people))\n  };\n}\n\nclass ConnectedGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: store.getState().people\n    };\n    this.handleNameChanged = this.handleNameChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChanged(event) {\n    var names = event.target.value.split(\",\").map(name => name.trim());\n    this.setState({ names: Array.from(new Set(names)) });\n  }\n\n  handleSubmit() {\n    this.props.setPeople(this.state.names);\n    this.props.history.push('/exps');\n  }\n\n  render() {\n    return (\n      <div className=\"ui center\">\n        <div className=\"ui hidden divider\"></div>\n        <Header as=\"h2\" textAlign=\"center\">With whom did you share expenditures?</Header>\n        <Header as=\"h3\" textAlign=\"center\">Enter the names of people to share</Header>\n        <div className=\"ui one column input big stackable center aligned page grid\">\n          <div className=\"column twelve wide\">\n            <div className=\"ui left icon fluid input\">\n              <input type=\"text\" placeholder=\"Enter seperated with comma(,)\" onChange={this.handleNameChanged} defaultValue={this.state.names.join(\",\")}/>\n              <i className=\"users icon\"></i>\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div>\n            { this.state.names && this.state.names.map((name, idx) => (\n              <button className=\"ui basic button\" key={idx}>\n                <i className=\"icon user\"></i>\n                { name }\n              </button>\n            ))}\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div className=\"ui hidden divider\"></div>\n            <button className=\"ui inverted green big button\" onClick={this.handleSubmit}><i className=\"save icon\"></i>&nbsp;Save</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Group = connect(null, mapDispatchToProps)(ConnectedGroup);\nexport default Group;\n","import React from 'react';\nimport { Header, Select, Input, Label, Table, Message, Divider, Icon } from 'semantic-ui-react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport { connect } from \"react-redux\";\nimport store from './redux/store';\nimport { deleteExpenditure, saveExpenditure, getTransfers } from './redux/actions';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveExpenditure: exp => dispatch(saveExpenditure(exp)),\n    deleteExpenditure: exp => dispatch(deleteExpenditure(exp)),\n    getTransfers: exp => dispatch(getTransfers())\n  };\n}\n\nlet emptyEditableExpenditure = {\n  id: undefined, date: undefined, store: undefined, desc: undefined,\n  amount: undefined, payer: undefined\n};\n\nclass ConnectedExpenditure extends React.Component {\n  constructor(props) {\n    super(props);\n\n    props.getTransfers();\n\n    this.state = {\n      editableExpenditure: emptyEditableExpenditure,\n      showSucceedMessage: false,\n      showErrorMessage: false,\n      expenditures: store.getState().expenditures,\n      transferList: store.getState().transfers\n    };\n\n    this.exportToFile = this.exportToFile.bind(this);\n    this.saveExpenditure = this.saveExpenditure.bind(this);\n    this.handleDismiss = this.handleDismiss.bind(this);\n    this.removeErrorMessage = this.removeErrorMessage.bind(this);\n    this.editExpenditure = this.editExpenditure.bind(this);\n  }\n\n  handleDismiss() {\n    this.setState({ showSucceedMessage: false });\n  }\n\n  removeErrorMessage() {\n    this.setState({ showErrorMessage: false });\n  }\n\n  getEditableExpenditureISODate() {\n    if (!this.state.editableExpenditure.date) {\n      return undefined;\n    }\n    var curr = new Date(this.state.editableExpenditure.date);\n    return curr.toISOString().substr(0,10);\n  }\n\n  editExpenditure(expenditure) {\n    this.setState({ editableExpenditure: expenditure });\n    window.scrollTo(0, 0);\n  }\n\n  deleteExpenditure(expenditure) {\n    this.props.deleteExpenditure(expenditure);\n    let { expenditures, transfers } = store.getState();\n    this.setState({ expenditures: expenditures, transferList: transfers });\n  }\n\n  saveExpenditure(event) {\n    event.preventDefault();\n\n    let { expenditures, editableExpenditure } = this.state;\n    if (!editableExpenditure.id) {\n      editableExpenditure.id = expenditures[expenditures.length - 1].id + 1;\n    }\n    editableExpenditure.date = document.querySelector(\"#date\").value;\n    editableExpenditure.store = document.querySelector(\"#store\").value;\n    editableExpenditure.desc = document.querySelector(\"#desc\").value;\n    editableExpenditure.amount = parseInt(document.querySelector(\"#amount\").value);\n    editableExpenditure.payer = document.querySelector(\"#payer>.text\").innerText;\n\n    let { date, desc, amount, payer } = editableExpenditure;\n    if(!(date && editableExpenditure.store && desc && amount && payer)) {\n      this.setState({ showErrorMessage: true });\n      return;\n    }\n    this.props.saveExpenditure(editableExpenditure);\n\n    this.setState({\n      expenditures: store.getState().expenditures.sort((a,b) => a.id - b.id),\n      transferList: store.getState().transfers,\n      editableExpenditure: emptyEditableExpenditure,\n      showSucceedMessage: true,\n    });\n    this.form.reset();\n  }\n\n  exportToFile() {\n    var now = new Date();\n    var nowString = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"-\");\n    htmlToImage.toJpeg(document.getElementById('expenditure_settlement'), {\n      backgroundColor: 'white'\n    }).then(dataUrl => download(dataUrl, `expenditure.png_${nowString}.jpeg`));\n  }\n\n  render() {\n    let { title, people, totalAmount } = store.getState();\n    let peopleNameOptions = people.map(name => ({\n      key: name, value: name, text: name\n    }));\n\n    let expenditureHeaders = ['#', 'Date',  'Payee(store) Name', 'Description', 'Paid Amount', 'Payer Name', 'Action'];\n\n    return (\n      <div className=\"ui center\">\n        <div className=\"ui hidden divider\"></div>\n        <Header as=\"h2\" textAlign=\"center\">Enter expenditures, and\n        <br/>Get to know the efficient settlement!</Header>\n        <div className=\"ui hidden divider\"></div>\n        <div className=\"ui piled segment\">\n          <form className=\"ui form\" ref={el => this.form = el} onSubmit={this.saveExpenditure}>\n            <Message negative style={{ display: this.state.showErrorMessage ? 'block' : 'none' }}>\n              <Message.Header>Failed to save the expenditure</Message.Header>\n              <p>Please enter all fields.</p>\n            </Message>\n            <Message info style={{ display: this.state.showSucceedMessage ? 'block' : 'none' }} onDismiss={this.handleDismiss}>\n              <Message.Header>Success!</Message.Header>\n              <p>The expenditure is saved.</p>\n            </Message>\n\n            <div className=\"fields\">\n              <div className=\"five wide field\">\n                <label>Expense date</label>\n                <input id=\"date\" type=\"date\" defaultValue={this.getEditableExpenditureISODate()}/>\n              </div>\n              <div className=\"four wide field\">\n                <label>Payee(store) name</label>\n                <input id=\"store\" type=\"text\" placeholder=\"(e.g. K supermarket)\" defaultValue={this.state.editableExpenditure.store} onChange={this.removeErrorMessage}/>\n              </div>\n              <div className=\"seven wide field\">\n                <label>Description</label>\n                <input id=\"desc\" type=\"text\" placeholder=\"(e.g. Buy water)\" defaultValue={this.state.editableExpenditure.desc} onChange={this.removeErrorMessage}/>\n              </div>\n            </div>\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Paid amount</label>\n                <Input id=\"amount\" labelPosition='right' type='number' placeholder='(e.g. 2)' defaultValue={this.state.editableExpenditure.amount} onChange={this.removeErrorMessage}>\n                  <Label basic>$</Label>\n                  <input />\n                  <Label>.00</Label>\n                </Input>\n              </div>\n              <div className=\"six wide field\">\n                <label>Payer name</label>\n                <Select id=\"payer\" search options={peopleNameOptions}\n                        placeholder={this.state.editableExpenditure.payer}\n                        defaultValue={this.state.editableExpenditure.payer}\n                        onChange={this.removeErrorMessage}/>\n              </div>\n              <div className=\"four wide field\">\n                <button className=\"ui primary basic button\" style={{ position: 'absolute', bottom: 0, right: 0}} type=\"submit\">\n                  <i className={`${this.state.editableExpenditure.id ? 'save' : 'add'} icon`}></i>{this.state.editableExpenditure.id ? 'Save' : 'Add'}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div id=\"expenditure_settlement\">\n          <Header as=\"h3\" textAlign=\"left\">Expenditure Histories of <span style={{ color: 'olive' }}>{title}</span></Header>\n          <Table celled selectable sortable color={'olive'}>\n            <Table.Header>\n              <Table.Row>\n                { expenditureHeaders.map((header, key) => <Table.HeaderCell key={key}>{header}</Table.HeaderCell>) }\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              { this.state.expenditures.map((expenditure, key) =>\n                <Table.Row key={key}>\n                  { Object.values(expenditure).map((data, key2) => <Table.Cell key={`${key}_${key2}`}>{data}</Table.Cell>) }\n                  <Table.Cell textAlign=\"center\" key={`cell_${key}`}>\n                    <div className=\"ui small basic icon buttons\">\n                      <button className=\"ui button\" onClick={el => this.editExpenditure(expenditure)}><i className=\"edit icon\"></i></button>\n                      <button className=\"ui button\" onClick={el => this.deleteExpenditure(expenditure)}><i className=\"trash alternate icon\"></i></button>\n                    </div>\n                  </Table.Cell>\n                </Table.Row>\n              ) }\n            </Table.Body>\n          </Table>\n\n          <Header as=\"h4\" textAlign=\"center\">Your group spent &nbsp;&nbsp;<span className=\"ui tag green label\">${ totalAmount }</span> in total. &nbsp;&nbsp;<span className=\"ui tag olive label\">${Math.round((totalAmount / people.length) * 100) / 100}</span> per person.</Header>\n          <div className=\"ui hidden divider\"></div>\n          <div className=\"ui hidden divider\"></div>\n          <Divider horizontal>\n            <Header as='h4'>\n              <Icon.Group size='large'>\n                <Icon name='money bill alternate outline' />\n                <Icon corner name='bar chart' />\n              </Icon.Group>\n              &nbsp;&nbsp;Settlements\n            </Header>\n          </Divider>\n          <Header as=\"h4\" textAlign=\"left\">This way, you'll be done with the settlement..</Header>\n          <Table celled sortable selectable color={'green'} textAlign='center'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Sender <i className=\"arrow right icon\"></i> Receiver</Table.HeaderCell>\n                <Table.HeaderCell>Amount</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n            { this.state.transferList.map(transfer => (\n              <Table.Row>\n                <Table.Cell>{transfer.sender} <i className=\"arrow right icon\"></i> {transfer.receiver}</Table.Cell>\n                <Table.Cell>${Math.round(transfer.amount * 100) / 100}</Table.Cell>\n              </Table.Row>\n            )) }\n            </Table.Body>\n          </Table>\n        </div>\n        <div className=\"ui hidden divider\"></div>\n        <button className=\"ui right floated primary button\" onClick={ this.exportToFile }><i className=\"download icon\"></i> Download</button>\n        <div className=\"ui hidden divider\"></div>\n        <div className=\"ui hidden divider\"></div>\n      </div>\n    );\n  }\n}\n\nconst Expenditure = connect(null, mapDispatchToProps)(ConnectedExpenditure);\nexport default Expenditure;\n","import React from 'react';\nimport { Container, Image } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\nimport './App.css';\n\nimport Title from './Title.js';\nimport Group from './Group.js';\nimport Expenditure from './Expenditure.js';\n\nfunction App() {\n  return [\n    <Container>\n      <Image src=\"https://fontmeme.com/permalink/190830/b2a3482ddfcbadd5d59ca2e91bc75a81.png\" size='medium' centered />\n      <div className=\"ui hidden divider\"></div>\n      <Router>\n        <div className=\"ui fluid ordered steps\">\n          <NavLink exact to=\"/\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Expenditure Title</div>\n              <div className=\"description\">Enter the title of the expenditure</div>\n            </div>\n          </NavLink>\n          <NavLink exact to=\"/group\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Group Information</div>\n              <div className=\"description\">Enter names of people to share</div>\n            </div>\n          </NavLink>\n          <NavLink exact to=\"/exps\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Expenditure Details</div>\n              <div className=\"description\">Enter expenditure details</div>\n            </div>\n          </NavLink>\n        </div>\n\n        <Route exact path=\"/\" component={Title} />\n        <Route exact path=\"/group\" component={Group} />\n        <Route exact path=\"/exps\" component={Expenditure} />\n      </Router>\n    </Container>\n  ];\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n <Provider store={store}>\n  <div style={{ padding: '50px 0px' }}>\n    <App />\n  </div>\n </Provider>,\n document.getElementById('root')\n);\n\n\nwindow.store = store;\n"],"sourceRoot":""}