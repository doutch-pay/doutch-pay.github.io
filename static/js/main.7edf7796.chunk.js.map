{"version":3,"sources":["redux/rootReducer.js","redux/store.js","redux/actions.js","Title.js","Group.js","Expenditure.js","App.js","index.js"],"names":["initialState","title","people","expenditures","totalAmount","transfers","getTransfers","exps","payToPerson","getTotalAmount","length","toPayPerPerson","map","name","amount","forEach","exp","filter","pp","payer","sort","a","b","payee","push","sender","receiver","sum","shift","pop","reduce","acc","expenditure","rootReducer","state","action","newExps","type","Object","assign","s","id","concat","store","createStore","setTitle","setPeople","deleteExpenditure","saveExpenditure","ConnectedTitle","props","getState","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","history","Divider","hidden","Grid","container","centered","stackable","Row","Header","as","className","column","Column","onSubmit","style","width","maxWidth","margin","onChange","validators","placeholder","errorMessages","Button","display","size","inverted","color","React","Component","Title","connect","dispatch","ConnectedGroup","names","handleNameChanged","split","trim","Array","from","Set","textAlign","defaultValue","join","idx","key","onClick","Group","emptyEditableExpenditure","undefined","date","desc","ConnectedExpenditure","editableExpenditure","showSucceedMessage","showErrorMessage","transferList","exportToFile","handleDismiss","removeErrorMessage","editExpenditure","Date","toISOString","substr","window","scrollTo","console","log","document","querySelector","parseInt","innerText","len","form","reset","now","nowString","getFullYear","getMonth","getDate","htmlToImage","toJpeg","getElementById","backgroundColor","then","dataUrl","download","Math","round","peopleNameOptions","text","ref","el","Message","negative","info","onDismiss","getEditableExpenditureISODate","Input","labelPosition","Label","basic","Select","search","options","position","bottom","right","Table","celled","selectable","sortable","header","HeaderCell","Body","values","data","key2","Cell","horizontal","Icon","corner","transfer","Expenditure","App","Container","exact","to","Image","src","Subheader","path","component","ReactDOM","render","padding"],"mappings":"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","file":"static/js/main.7edf7796.chunk.js","sourcesContent":["const initialState = {\n  title: '',\n  people: [],\n  /*\n   * { id: 1, payerId: 1, amount: 0, }\n   */\n  expenditures: [],\n  totalAmount: 0,\n  /*\n   * { sender: 'Aree', receiver: 'John', amount: 20 }\n   */\n  transfers: []\n};\n\n\nfunction getTransfers(exps, people) {\n  // 1. get summation of each person\n  const payToPerson = (getTotalAmount(exps) / people.length);\n  let toPayPerPerson = people.map(name => ({name: name, amount: payToPerson}));\n  exps.forEach(exp => {\n    toPayPerPerson.filter(pp => pp.name === exp.payer)[0].amount -= exp.amount;\n  });\n\n  toPayPerPerson.sort((a,b) => a.amount - b.amount);\n\n  let transfers = [];\n  while(toPayPerPerson.length > 1) {\n    var payee = toPayPerPerson[0];\n    var payer = toPayPerPerson[toPayPerPerson.length - 1];\n    transfers.push({ sender: payer.name, receiver: payee.name, amount: payer.amount});\n\n    var sum = payee.amount + payer.amount;\n    if(sum === 0) {\n      toPayPerPerson.shift();\n      toPayPerPerson.pop();\n    }\n    else if(sum > 0) {\n      payer.amount += payee.amount;\n      toPayPerPerson.shift();\n    }\n    else {\n      payee.amount += payer.amount;\n      toPayPerPerson.pop();\n    }\n  }\n  return transfers;\n}\n\nfunction getTotalAmount(exps) {\n  return exps.reduce((acc, expenditure) => acc + expenditure.amount, 0);\n}\n\nfunction rootReducer(state = initialState, action) {\n  var newExps = state.expenditures;\n  switch (action.type) {\n    case 'SET_TITLE':\n      state.title = action.title;\n      return state;\n\n    case 'SET_PEOPLE':\n      return Object.assign({}, state, {\n        people: action.people\n      });\n\n    case 'DELETE_EXPENDITURE':\n      newExps = newExps.filter(s => s.id !== action.id);\n      return Object.assign({}, state, {\n        expenditures: newExps,\n        totalAmount: getTotalAmount(newExps),\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    case 'SAVE_EXPENDITURE':\n      newExps = newExps.filter(s => s.id !== action.id).concat(action.expenditure);\n      return Object.assign({}, state, {\n        expenditures: newExps,\n        totalAmount: getTotalAmount(newExps),\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    case 'GET_TRANSFERS':\n      return Object.assign({}, state, {\n        transfers: getTransfers(newExps, state.people)\n      });\n\n    default:\n      return state\n  }\n};\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\nexport default store;\n","export const setTitle = title => ({\n  type: 'SET_TITLE',\n  title: title\n});\n\nexport const setPeople = people => ({\n  type: 'SET_PEOPLE',\n  people: people\n});\n\nexport const deleteExpenditure = expenditure => ({\n  type: 'DELETE_EXPENDITURE',\n  id: expenditure.id\n});\n\nexport const saveExpenditure = expenditure => ({\n  type: 'SAVE_EXPENDITURE',\n  id: expenditure.id,\n  expenditure: expenditure\n});\n\nexport const getTransfers = () => ({\n  type: 'GET_TRANSFERS'\n})\n","import React from 'react';\nimport { Form, Input } from 'semantic-ui-react-form-validator'\nimport { Header, Button, Segment, Icon, Grid, Divider } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { setTitle } from \"./redux/actions\";\nimport store from './redux/store';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTitle: title => dispatch(setTitle(title)),\n  };\n}\n\nclass ConnectedTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: store.getState().title\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.setTitle(this.state.title);\n    this.props.history.push('/group');\n  }\n\n  render() {\n    return [\n      <Divider hidden />,\n      <Divider hidden />,\n      <Grid container centered stackable>\n        <Grid.Row centered>\n          <Header as='h2' className=\"ui centered\">\n            What is your expenditures about?\n          </Header>\n        </Grid.Row>\n        <Grid.Row centered column={1}>\n          <Grid.Column>\n                <Form onSubmit={ this.handleSubmit } style={{ width: '100%', maxWidth: '500px', margin: '10px auto'}}>\n                  <Input type=\"text\" className=\"big\"\n                      onChange={this.handleChange}\n                      value={this.state.title}\n                      validators={['required']}\n                      placeholder=\"Enter the title..\"\n                      errorMessages={['This field is required']}\n                      width={16} />\n                    <Divider hidden />\n                    <Button style={{ display: 'block', margin: '10px auto' }} size=\"big\" inverted color=\"green\"><i className=\"save icon\"></i>&nbsp;Save</Button>\n                </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    ];\n  }\n}\n\nconst Title = connect(null, mapDispatchToProps)(ConnectedTitle);\n\nexport default Title;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { setPeople } from \"./redux/actions\";\nimport store from './redux/store';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setPeople: people => dispatch(setPeople(people))\n  };\n}\n\nclass ConnectedGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: store.getState().people\n    };\n    this.handleNameChanged = this.handleNameChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChanged(event) {\n    var names = event.target.value.split(\",\").map(name => name.trim());\n    this.setState({ names: Array.from(new Set(names)) });\n  }\n\n  handleSubmit() {\n    this.props.setPeople(this.state.names);\n    this.props.history.push('/exps');\n  }\n\n  render() {\n    return (\n      <div className=\"ui center\">\n        <div className=\"ui hidden divider\"></div>\n        <Header as=\"h2\" textAlign=\"center\">Whom did you share expenditures with?</Header>\n        <Header as=\"h3\" textAlign=\"center\">Enter the names of people to share</Header>\n        <div className=\"ui one column input big stackable center aligned page grid\">\n          <div className=\"column twelve wide\">\n            <div className=\"ui left icon fluid input\">\n              <input type=\"text\" placeholder=\"Enter seperated with comma(,)\" onChange={this.handleNameChanged} defaultValue={this.state.names.join(\",\")}/>\n              <i className=\"users icon\"></i>\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div>\n            { this.state.names && this.state.names.map((name, idx) => (\n              <button className=\"ui basic button\" key={idx}>\n                <i className=\"icon user\"></i>\n                { name }\n              </button>\n            ))}\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div className=\"ui hidden divider\"></div>\n            <button className=\"ui inverted green big button\" onClick={this.handleSubmit}><i className=\"save icon\"></i>&nbsp;Save</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Group = connect(null, mapDispatchToProps)(ConnectedGroup);\nexport default Group;\n","import React from 'react';\nimport { Header, Select, Input, Label, Table, Message, Divider, Icon } from 'semantic-ui-react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport { connect } from \"react-redux\";\nimport store from './redux/store';\nimport { deleteExpenditure, saveExpenditure, getTransfers } from './redux/actions';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveExpenditure: exp => dispatch(saveExpenditure(exp)),\n    deleteExpenditure: exp => dispatch(deleteExpenditure(exp)),\n    getTransfers: exp => dispatch(getTransfers())\n  };\n}\n\nlet emptyEditableExpenditure = {\n  id: undefined, date: undefined, store: undefined, desc: undefined,\n  amount: undefined, payer: undefined\n};\n\nclass ConnectedExpenditure extends React.Component {\n  constructor(props) {\n    super(props);\n\n    props.getTransfers();\n\n    this.state = {\n      editableExpenditure: emptyEditableExpenditure,\n      showSucceedMessage: false,\n      showErrorMessage: false,\n      expenditures: store.getState().expenditures,\n      transferList: store.getState().transfers\n    };\n\n    this.exportToFile = this.exportToFile.bind(this);\n    this.saveExpenditure = this.saveExpenditure.bind(this);\n    this.handleDismiss = this.handleDismiss.bind(this);\n    this.removeErrorMessage = this.removeErrorMessage.bind(this);\n    this.editExpenditure = this.editExpenditure.bind(this);\n  }\n\n  handleDismiss() {\n    this.setState({ showSucceedMessage: false });\n  }\n\n  removeErrorMessage() {\n    this.setState({ showErrorMessage: false });\n  }\n\n  getEditableExpenditureISODate() {\n    if (!this.state.editableExpenditure.date) {\n      return undefined;\n    }\n    var curr = new Date(this.state.editableExpenditure.date);\n    return curr.toISOString().substr(0,10);\n  }\n\n  editExpenditure(expenditure) {\n    this.setState({ editableExpenditure: expenditure });\n    window.scrollTo(0, 0);\n  }\n\n  deleteExpenditure(expenditure) {\n    this.props.deleteExpenditure(expenditure);\n    let { expenditures, transfers } = store.getState();\n    this.setState({ expenditures: expenditures, transferList: transfers });\n  }\n\n  saveExpenditure(event) {\n    event.preventDefault();\n\n    let { expenditures, editableExpenditure } = this.state;\n\n    console.log(editableExpenditure, expenditures);\n    let date = document.querySelector(\"#date\").value;\n    let state = document.querySelector(\"#store\").value;\n    let desc = document.querySelector(\"#desc\").value;\n    let amount = parseInt(document.querySelector(\"#amount\").value);\n    let payer = document.querySelector(\"#payer>.text\").innerText;\n    if(!(date && state && desc && amount && payer)) {\n      this.setState({ showErrorMessage: true });\n      return;\n    }\n\n    if (editableExpenditure.id === undefined) {\n      let len = expenditures.length;\n      editableExpenditure.id = (len === 0) ? 1 : expenditures[expenditures.length - 1].id + 1;\n    }\n    editableExpenditure.date = date;\n    editableExpenditure.store = state;\n    editableExpenditure.desc = desc;\n    editableExpenditure.amount = amount;\n    editableExpenditure.payer = payer;\n\n    this.props.saveExpenditure(editableExpenditure);\n\n    this.setState({\n      expenditures: store.getState().expenditures.sort((a,b) => a.id - b.id),\n      transferList: store.getState().transfers,\n      editableExpenditure: emptyEditableExpenditure,\n      showSucceedMessage: true,\n    });\n    this.form.reset();\n  }\n\n  exportToFile() {\n    var now = new Date();\n    var nowString = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"-\");\n    htmlToImage.toJpeg(document.getElementById('expenditure_settlement'), {\n      backgroundColor: 'white'\n    }).then(dataUrl => download(dataUrl, `expenditure.png_${nowString}.jpeg`));\n  }\n\n  render() {\n    let { title, people, totalAmount } = store.getState();\n    let pp = people.length > 0 ? Math.round((totalAmount / people.length) * 100) / 100 : 0;\n    let peopleNameOptions = people.map(name => ({ key: name, value: name, text: name }));\n    let expenditureHeaders = ['#', 'Date',  'Payee(store) Name', 'Description', 'Paid Amount', 'Payer Name', 'Action'];\n\n    return (\n      <div className=\"ui center\">\n        <div className=\"ui hidden divider\"></div>\n        <Header as=\"h2\" textAlign=\"center\">Enter expenditures, and\n        <br/>Get to know the efficient settlement!</Header>\n        <div className=\"ui hidden divider\"></div>\n        <div className=\"ui piled segment\">\n          <form className=\"ui form\" ref={el => this.form = el} onSubmit={this.saveExpenditure}>\n            <Message negative style={{ display: this.state.showErrorMessage ? 'block' : 'none' }}>\n              <Message.Header>Failed to save the expenditure</Message.Header>\n              <p>Please enter all fields.</p>\n            </Message>\n            <Message info style={{ display: this.state.showSucceedMessage ? 'block' : 'none' }} onDismiss={this.handleDismiss}>\n              <Message.Header>Success!</Message.Header>\n              <p>The expenditure is saved.</p>\n            </Message>\n\n            <div className=\"fields\">\n              <div className=\"five wide field\">\n                <label>Expense date</label>\n                <input id=\"date\" type=\"date\" defaultValue={this.getEditableExpenditureISODate()}/>\n              </div>\n              <div className=\"four wide field\">\n                <label>Payee(store) name</label>\n                <input id=\"store\" type=\"text\" placeholder=\"(e.g. K supermarket)\" defaultValue={this.state.editableExpenditure.store} onChange={this.removeErrorMessage}/>\n              </div>\n              <div className=\"seven wide field\">\n                <label>Description</label>\n                <input id=\"desc\" type=\"text\" placeholder=\"(e.g. Buy water)\" defaultValue={this.state.editableExpenditure.desc} onChange={this.removeErrorMessage}/>\n              </div>\n            </div>\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Paid amount</label>\n                <Input id=\"amount\" labelPosition='right' type='number' placeholder='(e.g. 2)' defaultValue={this.state.editableExpenditure.amount} onChange={this.removeErrorMessage}>\n                  <Label basic>$</Label>\n                  <input />\n                  <Label>.00</Label>\n                </Input>\n              </div>\n              <div className=\"six wide field\">\n                <label>Payer name</label>\n                <Select id=\"payer\" search options={peopleNameOptions}\n                        placeholder={this.state.editableExpenditure.payer}\n                        defaultValue={this.state.editableExpenditure.payer}\n                        onChange={this.removeErrorMessage}/>\n              </div>\n              <div className=\"four wide field\">\n                <button className=\"ui primary basic button\" style={{ position: 'absolute', bottom: 0, right: 0}} type=\"submit\">\n                  <i className={`${this.state.editableExpenditure.id ? 'save' : 'add'} icon`}></i>{this.state.editableExpenditure.id ? 'Save' : 'Add'}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div id=\"expenditure_settlement\">\n          <Header as=\"h3\" textAlign=\"left\">Expenditure Histories of <span style={{ color: 'olive' }}>{title}</span></Header>\n          <Table celled selectable sortable color={'olive'}>\n            <Table.Header>\n              <Table.Row>\n                { expenditureHeaders.map((header, key) => <Table.HeaderCell key={key}>{header}</Table.HeaderCell>) }\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              { this.state.expenditures.map((expenditure, key) =>\n                <Table.Row key={key}>\n                  { Object.values(expenditure).map((data, key2) => <Table.Cell key={`${key}_${key2}`}>{data}</Table.Cell>) }\n                  <Table.Cell textAlign=\"center\" key={`cell_${key}`}>\n                    <div className=\"ui small basic icon buttons\">\n                      <button className=\"ui button\" onClick={el => this.editExpenditure(expenditure)}><i className=\"edit icon\"></i></button>\n                      <button className=\"ui button\" onClick={el => this.deleteExpenditure(expenditure)}><i className=\"trash alternate icon\"></i></button>\n                    </div>\n                  </Table.Cell>\n                </Table.Row>\n              ) }\n            </Table.Body>\n          </Table>\n\n          <Header as=\"h4\" textAlign=\"center\">Your group spent &nbsp;&nbsp;<span className=\"ui tag green label\">${ totalAmount }</span> in total. &nbsp;&nbsp;<span className=\"ui tag olive label\">${pp}</span> per person.</Header>\n          <div className=\"ui hidden divider\"></div>\n          <div className=\"ui hidden divider\"></div>\n          <Divider horizontal>\n            <Header as='h4'>\n              <Icon.Group size='large'>\n                <Icon name='money bill alternate outline' />\n                <Icon corner name='bar chart' />\n              </Icon.Group>\n              &nbsp;&nbsp;Settlements\n            </Header>\n          </Divider>\n          <Header as=\"h4\" textAlign=\"left\">This way, you'll be done with the settlement..</Header>\n          <Table celled sortable selectable color={'green'} textAlign='center'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Sender <i className=\"arrow right icon\"></i> Receiver</Table.HeaderCell>\n                <Table.HeaderCell>Amount</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n            { this.state.transferList.map(transfer => (\n              <Table.Row>\n                <Table.Cell>{transfer.sender} <i className=\"arrow right icon\"></i> {transfer.receiver}</Table.Cell>\n                <Table.Cell>${Math.round(transfer.amount * 100) / 100}</Table.Cell>\n              </Table.Row>\n            )) }\n            </Table.Body>\n          </Table>\n        </div>\n        <div className=\"ui hidden divider\"></div>\n        <button className=\"ui right floated primary button\" onClick={ this.exportToFile }><i className=\"download icon\"></i> Download</button>\n        <div className=\"ui hidden divider\"></div>\n        <div className=\"ui hidden divider\"></div>\n      </div>\n    );\n  }\n}\n\nconst Expenditure = connect(null, mapDispatchToProps)(ConnectedExpenditure);\nexport default Expenditure;\n","import React from 'react';\nimport { Container, Image, Header } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\nimport './App.css';\n\nimport Title from './Title.js';\nimport Group from './Group.js';\nimport Expenditure from './Expenditure.js';\n\nfunction App() {\n  return [\n    <Container>\n      <Router>\n        <Header as='h1' className=\"ui centered\">\n          <NavLink exact to=\"/\" className=\"step\">\n            <Image src=\"https://fontmeme.com/permalink/190830/b2a3482ddfcbadd5d59ca2e91bc75a81.png\" size='medium' centered />\n          </NavLink>\n          <Header.Subheader>\n            Make settle/calculate easier for expenses spent with your friends.\n          </Header.Subheader>\n        </Header>\n        <div className=\"ui hidden divider\"></div>\n        <div className=\"ui fluid ordered steps\">\n          <NavLink exact to=\"/\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Expenditure Title</div>\n              <div className=\"description\">Enter the title of the expenditure</div>\n            </div>\n          </NavLink>\n          <NavLink exact to=\"/group\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Group Information</div>\n              <div className=\"description\">Enter names of people to share</div>\n            </div>\n          </NavLink>\n          <NavLink exact to=\"/exps\" className=\"step\">\n            <div className=\"content\">\n              <div className=\"title\">Expenditure Details</div>\n              <div className=\"description\">Enter expenditure details</div>\n            </div>\n          </NavLink>\n        </div>\n        <Route exact path=\"/\" component={Title} />\n        <Route exact path=\"/group\" component={Group} />\n        <Route exact path=\"/exps\" component={Expenditure} />\n      </Router>\n    </Container>\n  ];\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n <Provider store={store}>\n  <div style={{ padding: '50px 0px' }}>\n    <App />\n  </div>\n </Provider>,\n document.getElementById('root')\n);\n\n\nwindow.store = store;\n"],"sourceRoot":""}